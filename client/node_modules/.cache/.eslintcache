[{"C:\\user\\Inv_System\\inv_System\\client\\src\\index.js":"1","C:\\user\\Inv_System\\inv_System\\client\\src\\App.jsx":"2","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\ProtectedRoute.js":"3","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\Sidebar.jsx":"4","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\PurchaseOrders.jsx":"5","C:\\user\\Inv_System\\inv_System\\client\\src\\pages\\Dashboard.jsx":"6","C:\\user\\Inv_System\\inv_System\\client\\src\\context\\AuthContext.jsx":"7","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\Products.jsx":"8","C:\\user\\Inv_System\\inv_System\\client\\src\\pages\\Login.jsx":"9","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\StockManagement.jsx":"10","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\SupplierList.jsx":"11","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\UserManagement.jsx":"12","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditProductModal.jsx":"13","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditCategoryModal.jsx":"14","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditOrderModal.jsx":"15","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditSupplierModal.jsx":"16","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditStockModal.jsx":"17","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditUserModal.jsx":"18"},{"size":294,"mtime":1748781057031,"results":"19","hashOfConfig":"20"},{"size":1679,"mtime":1748781056808,"results":"21","hashOfConfig":"20"},{"size":457,"mtime":1748781056904,"results":"22","hashOfConfig":"20"},{"size":3829,"mtime":1748781056920,"results":"23","hashOfConfig":"20"},{"size":10538,"mtime":1748781056920,"results":"24","hashOfConfig":"20"},{"size":6791,"mtime":1748781057035,"results":"25","hashOfConfig":"20"},{"size":2666,"mtime":1748781057028,"results":"26","hashOfConfig":"20"},{"size":9173,"mtime":1748781056904,"results":"27","hashOfConfig":"20"},{"size":4061,"mtime":1748781057038,"results":"28","hashOfConfig":"20"},{"size":8276,"mtime":1748781056920,"results":"29","hashOfConfig":"20"},{"size":7480,"mtime":1748781056920,"results":"30","hashOfConfig":"20"},{"size":6803,"mtime":1748781056939,"results":"31","hashOfConfig":"20"},{"size":6126,"mtime":1748781056889,"results":"32","hashOfConfig":"20"},{"size":1525,"mtime":1748781056808,"results":"33","hashOfConfig":"20"},{"size":5723,"mtime":1748781056889,"results":"34","hashOfConfig":"20"},{"size":4659,"mtime":1748781056904,"results":"35","hashOfConfig":"20"},{"size":3616,"mtime":1748781056889,"results":"36","hashOfConfig":"20"},{"size":6734,"mtime":1748781056904,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1drgn9e",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\user\\Inv_System\\inv_System\\client\\src\\index.js",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\App.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\ProtectedRoute.js",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\Sidebar.jsx",["78"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FaTachometerAlt, FaBoxOpen, FaClipboardList, FaTruck, FaWarehouse, FaUser } from 'react-icons/fa';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n\r\nconst UserDropdown = ({ user }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const dropdownRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await fetch('/api/logout', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n      });\r\n      window.location.href = '/login'; // or navigate('/login')\r\n    } catch (err) {\r\n      console.error('Logout failed', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-auto pt-4 text-white-50 small position-relative\" ref={dropdownRef}>\r\n      <div\r\n        onClick={() => setOpen(!open)}\r\n        className=\"d-flex align-items-center text-white\"\r\n        style={{ fontSize: '20px', fontFamily: 'Arial', cursor: 'pointer' }} // ðŸ‘ˆ cursor added here\r\n      >\r\n        <FaUser className=\"me-2\" />\r\n        {user ? user.user_Username : 'User Name'}\r\n      </div>\r\n      <hr className=\"bg-white\" />\r\n\r\n      {open && (\r\n      <div\r\n        className=\"bg-white text-dark rounded shadow-sm mb-2\"\r\n        style={{\r\n          position: 'absolute',\r\n          left: 0,\r\n          bottom: '100%', // ðŸ‘ˆ this moves it above\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n      <button\r\n        onClick={handleLogout}\r\n        className=\"w-100 text-start px-3 py-2 border-0 bg-white text-dark\"\r\n        style={{\r\n          fontSize: '18px',\r\n          fontFamily: 'Arial',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n    </div>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\n\r\nconst Sidebar = () => {\r\n  const location = useLocation();\r\n  const { user } = useAuth(); // Get user from context\r\n\r\n  return (\r\n    <div className=\"sidebar d-flex flex-column p-3\" style={{background: '#25877b', minHeight: '100vh', width: 280 }}>\r\n      <div className=\"mb-4\">\r\n        <span className=\"fs-4 fw-bold text-white\">MarketTrack</span>\r\n      </div>\r\n      <p>\r\n\r\n      </p>\r\n      <Link style={{fontSize: '18px', FontFamily: 'Arial'}} className={`nav-link text-white mb-2, active: ''}`} to=\"/\">\r\n        <FaTachometerAlt className=\"me-2\" /> Dashboard\r\n      </Link>\r\n      <p>\r\n\r\n      </p>     \r\n      <Link style={{fontSize: '18px', FontFamily: 'Arial'}} className=\"nav-link text-white mb-2\" to=\"/products\">\r\n        <FaBoxOpen className=\"me-2\" /> Product Management\r\n      </Link>\r\n      <p>\r\n\r\n      </p>  \r\n      <Link style={{fontSize: '18px', FontFamily: 'Arial'}} className=\"nav-link text-white mb-2\" to=\"/orders\">\r\n        <FaClipboardList className=\"me-2\" /> Purchase Order\r\n      </Link>\r\n      <p>\r\n\r\n      </p>  \r\n      <Link style={{fontSize: '18px', FontFamily: 'Arial'}} className=\"nav-link text-white mb-2\" to=\"/suppliers\">\r\n        <FaTruck className=\"me-2\" /> Suppliers\r\n      </Link>\r\n      <p>\r\n\r\n      </p>  \r\n      <Link style={{fontSize: '18px', FontFamily: 'Arial'}} className=\"nav-link text-white mb-2\" to=\"/stock\">\r\n        <FaWarehouse className=\"me-2\" /> Stock Management\r\n      </Link>\r\n      <p>\r\n\r\n      </p>  \r\n\r\n      <Link style={{fontSize: '18px', FontFamily: 'Arial'}} className=\"nav-link text-white mb-2\" to=\"/users\">\r\n        <FaUser className=\"me-2\" /> Account Management\r\n      </Link>\r\n\r\n      <UserDropdown user={user} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\PurchaseOrders.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\pages\\Dashboard.jsx",["79"],"import React, { useEffect, useState } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\r\nimport { Package, Users, ShoppingCart, AlertTriangle } from 'lucide-react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Dashboard = () => {\r\n  const [summaryData, setSummaryData] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const [stockLevels, setStockLevels] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const API_BASE = 'http://localhost:5000/api';\r\n  const COLORS = ['#10B981', '#F59E0B', '#EF4444', '#3B82F6', '#8B5CF6'];\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const summary = await (await fetch(`${API_BASE}/dashboard/summary`)).json();\r\n      const products = await (await fetch(`${API_BASE}/dashboard/products`)).json();\r\n      const categories = await (await fetch(`${API_BASE}/dashboard/category-distribution`)).json();\r\n      const stock = await (await fetch(`${API_BASE}/dashboard/stock-levels`)).json();\r\n\r\n      setSummaryData(summary);\r\n      setProducts(products);\r\n      setCategoryData(categories);\r\n      setStockLevels(stock);\r\n    } catch (error) {\r\n      console.error('Failed to fetch dashboard:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid py-3 px-4 bg-light vh-100 overflow-hidden\">\r\n      <div className=\"mb-3\">\r\n        <h2 className=\"fw-bold mb-1\">Dashboard</h2>\r\n        <p className=\"text-muted\">Welcome back, Admin</p>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"row g-3 mb-3\">\r\n        <SummaryCard icon={<Package />} label=\"Total Products\" value={summaryData.totalProducts} color=\"success\" />\r\n        <SummaryCard icon={<Users />} label=\"Total Suppliers\" value={summaryData.totalSuppliers} color=\"primary\" />\r\n        <SummaryCard icon={<ShoppingCart />} label=\"Pending Orders\" value={summaryData.pendingOrders} color=\"warning\" />\r\n        <SummaryCard icon={<AlertTriangle />} label=\"Stock Alerts\" value={summaryData.stockAlerts} color=\"danger\" />\r\n      </div>\r\n\r\n      {/* Main Dashboard Grid */}\r\n      <div className=\"d-flex gap-3\" style={{ height: 'calc(100vh - 200px)' }}>\r\n        {/* Product Table */}\r\n        <div className=\"card flex-fill shadow-sm\" style={{ width: '30%', maxHeight: '70%', marginTop: '20px'}}>\r\n          <div className=\"card-header bg-white border-0 d-flex justify-content-between\">\r\n            <h6 className=\"mb-0\">Recent Products</h6>\r\n            <button className=\"btn btn-sm btn-outline-secondary\" onClick={fetchDashboardData}>â†»</button>\r\n          </div>\r\n          <div className=\"card-body p-0 overflow-auto\" style={{ maxHeight: '100%' }}>\r\n            <table className=\"table table-sm mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>Category</th>\r\n                  <th>Product</th>\r\n                  <th>ID</th>\r\n                  <th>Stock</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {products.slice(0, 5).map(p => (\r\n                  <tr key={p.product_ID}>\r\n                    <td>{p.category_Name || 'Uncategorized'}</td>\r\n                    <td>{p.product_Name}</td>\r\n                    <td>{p.product_ID}</td>\r\n                    <td>\r\n                      <span className={`badge bg-${p.stock_Quantity < 10 ? 'danger' : 'success'}`}>\r\n                        {p.stock_Quantity}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                {products.length === 0 && (\r\n                  <tr><td colSpan=\"4\" className=\"text-center text-muted py-2\">No data</td></tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bar Chart */}\r\n        <div className=\"card shadow-sm\" style={{ width: '30%', maxHeight: '70%', marginTop: '20px'}}>\r\n          <div className=\"card-header bg-white border-0\">\r\n            <h6 className=\"mb-0\">Stock by Category</h6>\r\n          </div>\r\n          <div className=\"card-body p-0\">\r\n            <ResponsiveContainer width=\"100%\" height={270}>\r\n              <BarChart data={stockLevels}>\r\n                <XAxis dataKey=\"category_Name\" tick={{ fontSize: 10 }} angle={-30} textAnchor=\"end\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"total_stock\" fill=\"#10B981\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Pie Chart */}\r\n        <div className=\"card shadow-sm\" style={{ width: '30%', maxHeight: '70%', marginTop: '20px'}}>\r\n          <div className=\"card-header bg-white border-0\">\r\n            <h6 className=\"mb-0\">Category Distribution</h6>\r\n          </div>\r\n          <div className=\"card-body p-0\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={categoryData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius={70}\r\n                  dataKey=\"product_count\"\r\n                >\r\n                  {categoryData.map((entry, index) => (\r\n                    <Cell key={index} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"d-flex flex-wrap justify-content-center small py-2\">\r\n              {categoryData.map((entry, index) => (\r\n                <div key={index} className=\"d-flex align-items-center mx-2\">\r\n                  <div className=\"me-2 rounded-circle\" style={{\r\n                    backgroundColor: COLORS[index % COLORS.length],\r\n                    width: '10px', height: '10px'\r\n                  }}></div>\r\n                  <span>{entry.category_Name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// SummaryCard Component\r\nconst SummaryCard = ({ icon, label, value = 0, color }) => (\r\n  <div className=\"col-6 col-lg-3\">\r\n    <div className={`card shadow-sm border-start border-${color} border-4`}>\r\n      <div className=\"card-body d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <small className=\"text-muted\">{label}</small>\r\n          <h5 className=\"fw-bold mb-0\">{value}</h5>\r\n        </div>\r\n        <div className={`text-${color}`}>{icon}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Dashboard;\r\n","C:\\user\\Inv_System\\inv_System\\client\\src\\context\\AuthContext.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\Products.jsx",["80"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Form, InputGroup, Alert } from 'react-bootstrap';\r\nimport { FaPlus, FaEdit} from 'react-icons/fa';\r\nimport AddEditProductModal from './AddEditProductModal';\r\nimport AddEditCategoryModal from './AddEditCategoryModal';\r\n\r\n\r\nconst initialFormState = {\r\n  product_Name: '',\r\n  category_ID: '',\r\n  supplier_ID: '',\r\n  price: '',\r\n  product_Quantity: ''\r\n};\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [searchName, setSearchName] = useState('');\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [form, setForm] = useState(initialFormState);\r\n  const [editProduct, setEditProduct] = useState(null);\r\n  const [suppliers, setSuppliersList] = useState([]);\r\n\r\n\r\n\r\n  // Category modal state\r\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\r\n\r\n  // For closing edit popup when clicking outside\r\n  const editPopupRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCategories();\r\n    fetchSuppliers();\r\n    // Close edit popup on outside click\r\n    const handleClickOutside = (event) => {\r\n      if (editPopupRef.current && !editPopupRef.current.contains(event.target)) {\r\n        setEditIndex(null);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const fetchProducts = async (search = '') => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/products', getAuthHeaders());\r\n      let data = res.data;\r\n      if (search) {\r\n        data = data.filter(prod =>\r\n          prod.product_Name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n      }\r\n      setProducts(data);\r\n    } catch {\r\n      setError('Failed to fetch products.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/category');\r\n    setCategories(res.data);\r\n  };\r\n\r\n  const fetchSuppliers = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/suppliers');\r\n    setSuppliersList(res.data);\r\n  };\r\n\r\n  // --- CRUD Handlers ---\r\n\r\n  // Add or Edit\r\n  const handleSave = async (product) => {\r\n    setError('');\r\n    setLoading(true);\r\n    try {\r\n      const payload = {\r\n        ...product,\r\n        category_ID: Number(product.category_ID),\r\n        supplier_ID: Number(product.supplier_ID),\r\n        price: Number(product.price),\r\n        product_Quantity: Number(product.product_Quantity)\r\n      };\r\n      if (product.product_ID) {\r\n        await axios.put(\r\n          `http://localhost:5000/api/products/${product.product_ID}`,\r\n          payload,\r\n          getAuthHeaders()\r\n        );\r\n      } else {\r\n        await axios.post(\r\n          'http://localhost:5000/api/products',\r\n          payload,\r\n          getAuthHeaders()\r\n        );\r\n      }\r\n      await fetchProducts();\r\n      setShowAdd(false);\r\n      setEditIndex(null);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to save product.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Delete\r\nconst handleDelete = async (id) => {\r\n  if (!id) return;\r\n  if (!window.confirm('Are you sure you want to delete this product?')) return;\r\n  setLoading(true);\r\n  try {\r\n    await axios.delete(`http://localhost:5000/api/products/${id}`, getAuthHeaders());\r\n    await fetchProducts();\r\n    setShowAdd(false);\r\n    setEditIndex(null);\r\n  } catch {\r\n    setError('Failed to delete product.');\r\n  }\r\n  setLoading(false);\r\n};\r\n\r\n\r\n  // Edit\r\nconst handleEdit = (prod) => {\r\n  setEditProduct(prod);  // âœ… sets product to edit\r\n  setShowAdd(true);      // âœ… opens modal\r\n};\r\n\r\n\r\n\r\n  // Show Add\r\n  const handleShowAdd = () => {\r\n    setForm(initialFormState); // Not really needed for add\r\n    setShowAdd(true);\r\n    setEditIndex(null);\r\n    setError('');\r\n  };\r\n\r\n  // --- Render ---\r\n\r\n  return (\r\n<div className=\"container my-4\">\r\n  {/* Search Bar and Add Category */}\r\n  <div className=\"d-flex flex-wrap gap-2 mb-3\">\r\n    <InputGroup className=\"flex-grow-1\" style={{ maxWidth: 400 }}>\r\n      <Form.Control\r\n        placeholder=\"Search by Product Name\"\r\n        value={searchName}\r\n        onChange={e => setSearchName(e.target.value)}\r\n      />\r\n      <Button style={{ backgroundColor: '#198754', color: 'white'}} variant=\"primary\" onClick={() => fetchProducts(searchName)}>\r\n        Search\r\n      </Button>\r\n    </InputGroup>\r\n    <Button variant=\"secondary\" onClick={() => setShowCategoryModal(true)}>\r\n      Add Category\r\n    </Button>\r\n  </div>\r\n\r\n  {/* Inventory Table */}\r\n  <div className=\"card shadow-sm\">\r\n    <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n      <h5 className=\"fw-bold\" style={{ fontSize: 22 }}>Inventory</h5>\r\n      <Button variant=\"success\" onClick={handleShowAdd} className=\"d-flex align-items-center gap-1\">\r\n        <FaPlus />\r\n      </Button>\r\n    </div>\r\n    <div className=\"card-body p-0\">\r\n      {error && <Alert variant=\"danger\" className=\"m-3\">{error}</Alert>}\r\n      <Table hover className=\"mb-0 table-striped\">\r\n        <thead className=\"table-light\">\r\n          <tr>\r\n            <th>Item Name</th>\r\n            <th>Category</th>\r\n            <th>Price</th>\r\n            <th>Supplier</th>\r\n            <th>Quantity</th>\r\n            <th style={{ width: 80 }}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan=\"6\" className=\"text-center py-3\">\r\n              </td>\r\n            </tr>\r\n          ) : products.length === 0 ? (\r\n            <tr>\r\n              <td colSpan=\"6\" className=\"text-center text-muted py-3\">No products found.</td>\r\n            </tr>\r\n          ) : (\r\n            products.map((prod, idx) => (\r\n              <tr key={prod.product_ID}>\r\n                <td>{prod.product_Name}</td>\r\n                <td>{prod.category_Name}</td>\r\n                <td>â‚± {prod.price}</td>\r\n                <td>{prod.supplier_Company}</td>\r\n                <td>{prod.product_Quantity}</td>\r\n                <td className=\"position-relative\">\r\n                  <Button\r\n                    variant=\"outline-success\"\r\n                    size=\"sm\"\r\n                    style={{ borderRadius: '50%'}}\r\n                    onClick={() => setEditIndex(idx)}\r\n                  >\r\n                    <FaEdit />\r\n                  </Button>\r\n                  {editIndex === idx && (\r\n                    <div\r\n                      ref={editPopupRef}\r\n                      className=\"position-absolute bg-white border rounded shadow p-2\"\r\n                      style={{ top: 0, right: 40, zIndex: 10, minWidth: 100 }}\r\n                    >\r\n                      <Button\r\n                        variant=\"success\"\r\n                        size=\"sm\"\r\n                        className=\"w-100 mb-1\"\r\n                        onClick={() => {\r\n                          handleEdit(prod, idx);\r\n                          setEditIndex(null);\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size=\"sm\"\r\n                        className=\"w-100\"\r\n                        onClick={() => handleDelete(prod.product_ID)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  </div>\r\n\r\n  {/* Add/Edit Product Modal */}\r\n    {showAdd && (\r\n    <AddEditProductModal\r\n      show={showAdd}\r\n      handleClose={() => {\r\n        setShowAdd(false);\r\n        setEditProduct(null); // âœ… important to clear edit state\r\n      }}\r\n      handleSave={handleSave}\r\n      initial={editProduct}     // âœ… this passes the correct data\r\n      categories={categories}\r\n      suppliers={suppliers}\r\n/>\r\n\r\n    )}\r\n\r\n\r\n\r\n  {/* Add/Edit Category Modal */}\r\n  {showCategoryModal && (\r\n    <AddEditCategoryModal\r\n      show={showCategoryModal}\r\n      handleClose={() => setShowCategoryModal(false)}\r\n      handleSave={async (cat) => {\r\n        await axios.post('http://localhost:5000/api/category', cat);\r\n        await fetchCategories();\r\n        setShowCategoryModal(false);\r\n      }}\r\n    />\r\n  )}\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token from localStorage:', token);  // Debug log\r\n  console.log('Token exists:', !!token);           // Debug log\r\n  const headers = token ? { headers: { Authorization: `Bearer ${token}` } } : {};\r\n  console.log('Auth headers being sent:', headers); // Debug log\r\n  return headers;\r\n};\r\n\r\nexport default Products;","C:\\user\\Inv_System\\inv_System\\client\\src\\pages\\Login.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\StockManagement.jsx",["81"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, InputGroup, Form, Alert } from 'react-bootstrap';\r\nimport { FaEdit, FaPlus, FaSearch } from 'react-icons/fa';\r\nimport AddEditStockModal from './AddEditStockModal';\r\n\r\nconst StockManagement = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editStock, setEditStock] = useState(null);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const popupRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) fetchStocks();\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\r\n        setEditIndex(null);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/products', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setProducts(res.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch products: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const fetchStocks = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/stock', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const stocksWithNames = res.data.map(stock => {\r\n        const prod = products.find(p => p.product_ID === stock.product_ID);\r\n        return {\r\n          ...stock,\r\n          product_Name: prod ? prod.product_Name : 'Unknown Product',\r\n        };\r\n      });\r\n      setStocks(stocksWithNames);\r\n    } catch (err) {\r\n      setError('Failed to fetch stock.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSave = async (stock) => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      };\r\n      if (editStock) {\r\n        await axios.put(`http://localhost:5000/api/stock/${editStock.stock_ID}`, stock, config);\r\n      } else {\r\n        await axios.post('http://localhost:5000/api/stock', stock, config);\r\n      }\r\n      await fetchStocks();\r\n      setShowModal(false);\r\n      setEditStock(null);\r\n      setEditIndex(null);\r\n    } catch (err) {\r\n      setError('Failed to save stock.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleEditClick = (idx) => {\r\n    setEditIndex(editIndex === idx ? null : idx);\r\n  };\r\n\r\n  const handleEdit = (stock) => {\r\n    setEditStock(stock);\r\n    setShowModal(true);\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this stock entry?')) {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/stock/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        await fetchStocks();\r\n        setEditStock(null);\r\n        setEditIndex(null);\r\n      } catch (err) {\r\n        setError('Failed to delete stock.');\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredStocks = stocks.filter(stock =>\r\n    stock.product_Name?.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"ocntainer my-4\">\r\n      <div className=\"d-flex flex-wrap gap-2 mb-3\">\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder=\"Search Product Name\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            style={{ maxWidth: 300 }}\r\n          />\r\n          <FaSearch style={{ position: 'absolute', left: 270, top: 10 }} />\r\n        </InputGroup>\r\n      </div>\r\n      <div className=\"card shadow-sm\">\r\n        <div className=\"d-flex align-items-center justify-content-between px-4 py-2\" style={{ borderBottom: '1px solid #eee' }}>\r\n          <span className=\"fw-bold\" style={{ fontSize: 21 }}>Stock</span>\r\n          <Button\r\n            variant=\"success\"\r\n            style={{ maxHeight: 30, position: 'absolute', right: 15 }}\r\n            onClick={() => { setShowModal(true); setEditStock(null); }}\r\n          >\r\n            <FaPlus style={{ marginBottom: 9 }} />\r\n          </Button>\r\n        </div>\r\n        {error && <Alert variant=\"danger\" className=\"m-3\">{error}</Alert>}\r\n        {loading ? (\r\n          <div className=\"text-center my-4\">Loading...</div>\r\n        ) : (\r\n          <Table hover className=\"mb-0 table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Quantity</th>\r\n                <th>Last Restock Date</th>\r\n                <th style={{ width: 80 }}>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredStocks.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"text-center text-muted\">No stock entries found.</td>\r\n                </tr>\r\n              ) : (\r\n                filteredStocks.map((stock, idx) => (\r\n                  <tr key={stock.stock_ID}>\r\n                    <td>{stock.product_Name}</td>\r\n                    <td>{stock.stock_Quantity}</td>\r\n                    <td>{stock.last_RestockDate ? new Date(stock.last_RestockDate).toLocaleDateString() : ''}</td>\r\n                    <td style={{ position: 'relative' }}>\r\n                      <Button\r\n                        variant=\"outline-success\"\r\n                        size=\"sm\"\r\n                        style={{ borderRadius: '50%' }}\r\n                        onClick={() => handleEditClick(idx)}\r\n                      >\r\n                        <FaEdit />\r\n                      </Button>\r\n                      {editIndex === idx && (\r\n                        <div\r\n                          ref={popupRef}\r\n                          style={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            right: 40,\r\n                            background: '#fff',\r\n                            border: '1px solid #ccc',\r\n                            borderRadius: 8,\r\n                            boxShadow: '0 2px 8px #0002',\r\n                            zIndex: 10,\r\n                            padding: 12,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: 8\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"success\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleEdit(stock)}\r\n                            style={{ minWidth: 70 }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleDelete(stock.stock_ID)}\r\n                            style={{ minWidth: 70 }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </div>\r\n      {showModal && (\r\n        <AddEditStockModal\r\n          show={showModal}\r\n          handleClose={() => { setShowModal(false); setEditStock(null); }}\r\n          handleSave={handleSave}\r\n          initial={editStock}\r\n          products={products}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockManagement;\r\n","C:\\user\\Inv_System\\inv_System\\client\\src\\components\\SupplierList.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\UserManagement.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditProductModal.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditCategoryModal.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditOrderModal.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditSupplierModal.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditStockModal.jsx",[],"C:\\user\\Inv_System\\inv_System\\client\\src\\components\\AddEditUserModal.jsx",[],{"ruleId":"82","severity":1,"message":"83","line":74,"column":9,"nodeType":"84","messageId":"85","endLine":74,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":17},{"ruleId":"82","severity":1,"message":"87","line":25,"column":10,"nodeType":"84","messageId":"85","endLine":25,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":24,"column":6,"nodeType":"90","endLine":24,"endColumn":16,"suggestions":"91"},"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'form' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchStocks'. Either include it or remove the dependency array.","ArrayExpression",["92"],{"desc":"93","fix":"94"},"Update the dependencies array to be: [fetchStocks, products]",{"range":"95","text":"96"},[868,878],"[fetchStocks, products]"]